---
AWSTemplateFormatVersion: '2010-09-09'
Description: AWS S3 Bucket with CloudFront distribution
Parameters:
  RootDomainName:
    Description: Domain name for your website (example.com)
    Type: String
    Default: moonstar.click
  AwsRoute53CloudFrontHostedZoneId:
    Description:  CloudFront resources HostedZoneId
    Type:         String
    Default:      Z0772376FVYXIANRZPOE

Resources:

#### ACM Certificate
  ACMCertificate: 
    Type: AWS::CertificateManager::Certificate
    Properties: 
      DomainName: !Sub "${RootDomainName}"
      SubjectAlternativeNames:
        - !Ref RootDomainName
        - !Sub "www.${RootDomainName}"
      CertificateTransparencyLoggingPreference: DISABLED
      DomainValidationOptions:
        - DomainName: !Ref RootDomainName
          HostedZoneId: !Ref AwsRoute53CloudFrontHostedZoneId
      ValidationMethod: DNS

### Origin Access Identity
  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties: 
      CloudFrontOriginAccessIdentityConfig: 
        Comment: !Sub "The OAI for the bucket: ${WebsiteBucket}"

#### S3Buckets for website hosting
  WebsiteBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: bucket-moonstarclick
      AccessControl: 'Private'
      WebsiteConfiguration:
        IndexDocument: index.html

  BlogWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${WebsiteBucket}-blog"
      AccessControl: 'Private'
      WebsiteConfiguration:
        IndexDocument: index.html

  WebsiteBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    DependsOn: WebsiteBucket
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt: [ OriginAccessIdentity , S3CanonicalUserId ]
            Action: "s3:GetObject"
            Resource: !Sub "${WebsiteBucket.Arn}/*"
                
  BlogWebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: BlogWebsiteBucket
    Properties:
      Bucket: !Ref BlogWebsiteBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: 's3:GetObject'
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt: [ OriginAccessIdentity , S3CanonicalUserId ]
            Action: "s3:GetObject"
            Resource: !Sub "${BlogWebsiteBucket.Arn}/*"

  ## Cloudfront distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: ACMCertificate
    Properties:
      DistributionConfig:
        Origins:
          - Id: 's3-web-bucket'
            DomainName: !Sub "${WebsiteBucket}.s3.amazonaws.com"
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${OriginAccessIdentity}"
          - Id: 'custom-origin'
            DomainName: !Sub "${BlogWebsiteBucket}.s3.amazonaws.com"
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${OriginAccessIdentity}"
        Enabled: 'true'
        Comment: Static main website distribution
        HttpVersion: http2
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          Compress: true
          AllowedMethods:
            - HEAD
            - GET
            - OPTIONS
          CachedMethods:
            - HEAD
            - GET
            - OPTIONS
          TargetOriginId: s3-web-bucket
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: "none"
          ViewerProtocolPolicy: redirect-to-https
        CacheBehaviors:
          - PathPattern: "/two/*"
            TargetOriginId: 'custom-origin'
            ForwardedValues:
              QueryString: false
            ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_100
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        Aliases:
          - !Ref RootDomainName
          - !Sub "www.${RootDomainName}"
        ViewerCertificate:
          AcmCertificateArn: !Ref ACMCertificate
          MinimumProtocolVersion: "TLSv1.2_2018"
          SslSupportMethod: sni-only


#### Outputs   
Outputs:
  WebsiteURL:
    Value: !GetAtt WebsiteBucket.WebsiteURL
    Description: URL for website hosted on S3

  WebsiteBlogURL:
    Value: !GetAtt BlogWebsiteBucket.WebsiteURL
    Description: URL for Blog website hosted on S3

  CFDistributionDomainName:
    Description: 'Domain of the CloudFront distribution'
    Value: !GetAtt CloudFrontDistribution.DomainName
